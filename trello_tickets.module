<?php

/**
 * @file
 * Example Trello Module.
 *
 * Show the use of the API showing a list of boards in a block, and a form
 * which posts to a list on a board.
 */

/**
 * Implements hook_menu().
 */
function trello_tickets_menu() {
  $items = array();

  $items['trello/example'] = array(
    'title' => 'Submit support ticket',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('trello_tickets_form'),
    'access arguments' => array('access trello'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/config/services/trello/example'] = array(
    'title' => 'Trello Example Configuration',
    'description' => 'Configure your Support Queue list.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('trello_tickets_config_form'),
    'access arguments' => array('administer trello'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Implements hook_block_info().
 */
function trello_tickets_block_info() {
  $blocks = array();
  $blocks['trelloExample'] = array(
    'info' => t('List Trello Boards'),
    'status' => TRUE,
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function trello_tickets_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'trelloExample':
      $block['subject'] = t('Trello Boards');
      $t = trello_api(array('members' => 'me', 'boards'));
      $block['content'] = '<ul>';
      foreach ($t['data'] as $board) {
        if ($board->pinned) {
          $block['content'] .= '<li>' . l($board->name, $board->url) . '</li>';
        }
      }
      $block['content'] .= '</ul>';
      break;
  }
  return $block;
}

/**
 * The example administration form.
 *
 * Let the user select a board and select or create a list in that board for
 * use in the support ticket form.
 */
function trello_tickets_config_form() {
  $t = trello_api('members/me/boards');
  if ($t['meta_data']['count'] == 0 || $t['data'][0] == NULL) {
    $form['noboards'] = array(
      '#markup' => t('No boards found. Please confirm your Trello API configuration and auth token.'),
    );
    return $form;
  }
  $boards = array();
  foreach ($t['data'] as $b) {
    $boards[$b->id] = $b->name;
  }
  $list = variable_get('trello_tickets_queue');
  if ($list) {
    $t = trello_api(array('lists' => $list, 'board'));
    $default_board = $t['data'][0]->id;
    $t = trello_api(array('lists' => $list));
    $default_list = $t['data'][0]->name;
  }

  $form = array();
  $form['board'] = array(
    '#type' => 'select',
    '#title' => t('Board'),
    '#options' => $boards,
    '#required' => TRUE,
  );
  isset($default_board) AND $form['board']['#default_value'] = $default_board;
  $form['list'] = array(
    '#type' => 'textfield',
    '#title' => t('List name'),
    '#default_value' => (isset($default_list) ? $default_list : 'Support Queue'),
    '#required' => TRUE,
  );
  $form['actions']['#type'] = 'actions';
  $form['actions']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save Configuration'),
  );

  return $form;
}

/**
 * Handle the support ticket postings.
 */
function trello_tickets_config_form_submit(&$form, &$form_state) {
  $t = trello_api(array('boards' => $form_state['values']['board'], 'lists'));
  foreach ($t['data'] as $list) {
    if ($form_state['values']['list'] == $list->name) {
      $list_id = $list->id;
    }
  }
  if (empty($list_id)) {
    // Create the list.
    $args = array('name' => $form_state['values']['list'], 'idBoard' => $form_state['values']['board']);
    $t = trello_api('lists', $args, 'POST');
    $list_id = $t['data'][0]->id;
  }
  variable_set('trello_tickets_queue', $list_id);

  drupal_set_message(t('Your trello list configuration has been saved.'));
}

/**
 * Present a simple form to the user for submitting a support request.
 */
function trello_tickets_form($form, &$form_state) {
  // Check that we have a list to submit to.
  if (!variable_get('trello_tickets_queue')) {
    $markup = t('You need to configure a list first: !link',
      array('!link' => l(t('Configuration page'), 'admin/config/services/trello/example')));
    $form = array('notice' => array('#markup' => $markup));
    return $form;
  }
  $form = array();
  $form['help'] = array(
    '#markup' => t('Please submit your support request here and it will be added to our queue.'),
  );
  $form['title'] = array(
    '#type' => 'textfield',
    '#title' => t('Subject'),
    '#required' => TRUE,
  );
  $form['description'] = array(
    '#type' => 'textarea',
    '#title' => t('Details'),
  );

  $form['actions']['#type'] = 'actions';
  $form['actions']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit Request'),
  );

  $form['contact_email'] = array(
    '#type' => 'textfield',
    '#title' => 'Contact Email address',
  );
  $form['referer'] = array(
    '#type' => 'hidden',
    '#default_value' => $_SERVER['HTTP_REFERER'],
  );
  $form['user_agent'] = array(
    '#type' => 'hidden',
    '#default_value' => $_SERVER['HTTP_USER_AGENT'],
  );
  $form['ip_address'] = array(
    '#type' => 'hidden',
  );
  global $user;
  $form['username'] = array(
    '#type' => 'hidden',
    '#default_value' => $user->uid == 0 ? 'Anonymous' : $user->name,
  );
  return $form;
}

/**
 * Add the post as a card to the specified list.
 */
function trello_tickets_form_submit(&$form, &$form_state) {
  $queue = variable_get('trello_tickets_queue');
  $args = array('name' => $form_state['values']['title'], 'idList' => $queue);
  empty($form_state['values']['description']) OR $args['desc'] = $form_state['values']['description'];

  $referer = isset($form_state['values']['referer']) ? $form_state['values']['referer'] : '?';
  $agent   = isset($form_state['values']['user_agent']) ? $form_state['values']['user_agent'] : '?';
  $user    = isset($form_state['values']['username']) ? $form_state['values']['username'] : '?';
  $email   = isset($form_state['values']['contact_email']) ? $form_state['values']['contact_email'] : 'Not given.';
  $args['desc'] .= <<<INFO

      
 ---

- Referer:    $referer
- User Agent: $agent
- Username:   $user
- Email:      $email
INFO;

  $board = trello_api(array('lists' => $queue, 'board'), 'GET');
  $members = trello_api(array('boards' => $board['data'][0]->id, 'members'), 'GET');
  $notify = array();
  foreach($members['data'] as $member) {
    $notify[] = $member->id;
  }
  //$args[] = array('idMembers' => $notify);
  // need a due date formatted as 2017-06-15T04:00:00.000Z
  $due = gmstrftime("%his link to track the progress: A %d-%b-%y %T %Z", time() + 86400);
  $args['due'] = $due;
  $cards = trello_api(array('lists' => $queue, 'cards'), 'GET');

  $labels = trello_api(array('boards' => $board['data'][0]->id, 'labels'), 'GET');

  // Use the object oriented version of the API.
  $trello = new Trello();
  $trello->post('cards', $args);

  $cards = trello_api(array('lists' => $queue, 'cards'));

  drupal_set_message(t('Thanks! Your post was submitted. Use this link to track the progress: <a href="@c">@c</a>',
      array('@c' => url($trello->result['data'][0]->shortUrl))
    ));
}
